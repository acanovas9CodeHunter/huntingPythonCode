"""
EN PYTHON, UNA TUPLA ES UNA COLECCIÓN ORDENADA EN INMUTABLE DE ELEMENTOS. ES SIMILAR A UNA LISTA, PERO A DIFERENCIA DE LAS LISTAS, LAS TUPLAS NO SE PUEDEN MODIFICAR
UNA VEZ CREADAS. SE DEFINEN UTILIZANDO PARENTESIS () Y SEPARANDO LOS ELEMENTOS POR COMAS. 
"""

#CREACION DE UNA TUPLA
my_tupla = (1,2,3,4,5)
print(my_tupla)
my_tupla2 = 1,2,3,4,5
print(my_tupla2)
my_tupla3 = (12345, "hola", 10.5)
print(my_tupla3)

"""
AUNQUE LAS TUPLAS PUEDEN PARECER SIMILARES A LAS LISTAS, A MENUDO SE USAN EN DIFERENTES SITUACIONES Y PARA DIFERENTES PROPÓSITOS. LAS TUPLAS SON INMUTABLES, Y POR LO GENERAL
CONTIENEN UNA SECUENCIA HETEROGÉNEA DE ELEMENTOS A LOS QUE SE ACCEDE MEDIANTE EL DESEMPAQUETADO O LA INDEXACIÓN. LAS LISTAS SON MUTABLES, Y SUS ELEMENTOS SUELEN SER 
HOMOGENEOS Y SE ACCEDEN ITERANDO SOBRE LAS LISTAS
"""

#ACCESO A ELEMENTOS DE UNA TUPLA
print(my_tupla[0])
print(my_tupla2[2])
print(my_tupla3[1])

#OBTENCION DEL TAMAÑO / LONGITUD DE UNA LISTA CON LEN

print(len(my_tupla))
print(len(my_tupla3))

#PODEMOS CONCATENAR TUPLAS CON EL OPERADOR +, PERO CUIDADO LOS OPERADORES - * / NO FUNCIONAN

my_new_tupla = my_tupla + my_tupla3
print(my_new_tupla)


#PUEDO ASIGNAR A VARIABLES LOS VALORES DE UNA TUPLA POR POSICION DE FORMA SECUENCIAL
a, b, c, d, e = my_tupla#a = 1, b = 2, c = 3
print(a, b, c, d, e)

#PODEMOS CONTAR EL NUMERO DE OCURRENCIAS DE UNA TUPLA CON LA FUNCION COUNT(PARAM)
print(my_tupla.count(1))

#PODEMOS OBTENER EL INDICE DE UNA OCURRENCIA CON LA FUNCION INDEX, ¿EN QUE POSICION ESTA EL 4 EN NUESTRA TUPLA?
print(my_tupla.index(4))

#PRINCIPAL DIFERENCIA CON LAS LISTAS, LAS TUPLAS CON INMUTABLES, VAMOS A INTENTAR MODIFICAR UN VALOR DE LA TUPLA. ESTO PROVOCA ERROR PROBAD
#my_tupla[0] = 9 NO DEJA MODIFICAR SU VALOR, EN CAMBIO EN LAS LISTAS SI

#PARA ELIMINAR O BORRAR UNA TUPLA USAMOS LA FUNCION DEL
del my_tupla
del my_tupla2