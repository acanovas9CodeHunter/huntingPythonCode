"""
EN PYTHON PUEDES TRABAJAR CON ARCHIVOS UTILIZANDO DIVERSAS FUNCIONES Y OBJETOS PROPORCIONADOS POR EL LENGUAJES. LOS ARCHIVOS SON UNA
FORMA IMPORTANTE DE ENTRADA Y SALIDA DE DATOS EN LA MAYORIA DE APLICACIONES.
"""

#PARA USAR UN FICHERO LO PRIMERO QUE TENEMOS QUE HACER ES ABRIRLO EN FORMA DE LECTURA O FORMA DE ESCRITURA
#USAMOS LA FUNCION OPEN A LA QUE LE PASAMOS LA RUTA DE UN FICHERO Y SU MODO DE APERTURA
# ABRIR UN ARCHIVO EN MODO LECTURA, CON R DE READ
#archivo_lectura = open('archivo.txt', 'r')

# ABRIR UN ARCHIVO EN MODO ESCRITURA, CON W DE WRITE
#archivo_escritura = open('nuevo_archivo.txt', 'w')

#ES MUY IMPORTANTE CERRAR LOS ARCHIVOS DESPUÉS DE USARLOS PARA LIBERAR RECURSOS. ADEMAS DE PARA ASEGURARNOS DE QUE NO HAY UN MAL TRATAMIENTO DE ELLOS
#USAMOS LA FUNCION CLOSE
#archivo_lectura.close()
#archivo_escritura.close()

#LECTURA DE ARCHIVOS
#PODEMOS LEER FICHEROS CON READ, READLINE, ITERANDO LAS LIENAS A TRAVES DE UN BUCLE FOR O CON LA FUNCION WITH

#READ
archivo = open('intermedio/file.txt', 'r+')#CON R+ PODEMOS LEER Y ESCRIBIR EN UN FICHERO
contenido = archivo.read()#CON EL READ LEO TODO EL FICHERO 
print(contenido)
archivo.close()
 
print("------------------")
archivo2 = open('intermedio/file2.txt', 'r+')
contenido2 = archivo2.readline()#CON EL READLINE LEO UNA LINEA
print(contenido2)
archivo2.close()

print("------------------")
archivo2 = open('intermedio/file2.txt', 'r+')
contenido3 = archivo2.readlines()#CON ESTE LEO POR LINEAS Y LAS ALMECENO EN UNA LISTA
print(contenido3)
archivo2.close()
print("------------------")

#LA FUNCION WITH SIMPLIFICA Y MEJORA LA GESTIOON DE RECURSOS AL PROPORCIONAR UN CONTEXTO SEGURO Y GARANTIZAR QUE LOS RECURSOS
#SE LIBEREN ADECUADAMENTE CUANDO YA NO SEAN NECESARIOS

#MI FORMA FAVORITA DE LEER UN FICHERO CUANDO NECESITAMOS REALIZAR ALGUNA OPERATIVA O MODIFICAR ALGUNA LINEA.

with open('intermedio/file2.txt', 'r+') as archivo3:#ABRO EL ARCHIVO EN MODO LECTURA+ Y CON LA AUTOGESTIÓN DE WITH
    linea = archivo3.readline()
    while linea:
        #PROCESAR LINEA
        print(linea)
        linea = archivo3.readline()

#EN ESTE CASO ABRIMOS EL FICHERO CON WITH PARA QUE EL SE ENCARGUE DE LA GESTIÓN DE RECURSOS, Y CON UN BUCLE WHILE MIENTRAS HAYAN LIENAS POR LEER
#VAMOS LEYENDA CADA LINEA OPERANDO CON ELLA Y AL FINAL, COMO SI FUERA UN ITERADOR DE UN FOR, PASAMOS DE LINEA

print("------------------")
print("AHORA VAMOS A ESCRIBIR UN FICHERO")
"""
ESCRIBIR UN FICHERO TENEMOS 2 OPCIONES: 
'W' SI EL FICHERO YA EXISTE, BORRARA SU CONTENIDO Y COMENZARA UN FICHERO DESDE 0
EL POSICIONAMIENTO DEL PUNTERO SE PONE AL PRINCIPIO POR LO QUE SOBREESCRIBIRA CUALQUIER LINEA QUE YA EXISTA
'A' SI EL FICHERO YA EXISTE, ESCRIBIRA LAS LINEAS A CONTINUACION DE LAS ANTERIORES, NO BORRARA NADA, 
EL POSICIONAMIENTO DEL PUNTERO SE PONE AL FINAL POR LO QUE ANYADIRA NUEVAS LINEAS

USAREMOS W CUANDO QUERAMOS CREAR UN NUEVO FICHERO Y USAREMOS A EN LOS CASOS DE QUERER ANYADIR LINEAS AL FINAL
"""
with open('intermedio/file3.txt', 'w') as archivo_escritura:
    for i in range(5):
        archivo_escritura.write("\nEsta es la linea: " + str(i))#SI QUEREMOS QUE NOS HAGA SALTO DE LINEA, HAY QUE ANYADIR EL \n
    
    archivo_escritura.write("\nAHORA CIERRO FICHERO Y LO ABRO DE NUEVO CON A")


with open('intermedio/file3.txt', 'a') as archivo_escritura:
    for i in range(5,10):
         archivo_escritura.write("\nEsta es la linea: " + str(i))








