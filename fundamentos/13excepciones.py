"""
EN PYTHON, UNA EXCEPCIÓN ES UN EVENTO QUE OCURRE DURANTE LA EJECUCIÓN DE UN PROGRAMA Y QUE INTRERRUMPE EL FLUJO NORMAL DEL CÓDIGO. 
CUANDO SE PRODUCE UNA EXCEPCIÓN, EL PROGRAMA DEJA DE EJECUTARSE Y BUSCA UN BLOQUE DE CÓDIGO QUE PUEDA MANEJAR LA EXCEPCIÓN PARA EVITAR QUE EL PROGRAMA SE BLOQUEE
O SE DETENGA ABRUPTAMENTE. 
POR EJEMPLO: INTENTAR HACER UNA DIVISIÓN ENTRE 0 DARÁ EL ERROR DE ZERODIVISIONERROR, YA QUE ES IMPOSIBLE DIVIDIR ALGO ENTRE 0. 
ESTA SESIÓN TRATA DE SABER CREAR EXCEPCIONES Y MANEJARLAS PARA CONTROLAR LOS POSIBLES ERRORES EN EL FLUJO DE NUESTRO CÓDIGO.
"""

numero1 = 5
numero2 = 0

#resultado = numero1/numero2 COMO PODEMOS VER, ESTO VA A DAR UN ERROR Y NUESTRO CÓDIGO VA A TERMINAR
#PERO SI ESO MISMO LO HACEMOS UN BLOQUE DE MANEJO DE EXCEPCIONES NO VA A PETAR NUESTRA APP

try:
    resultado = numero1/numero2#AQUÍ DA ERROR, PERO COMO LO ESTAMOS GESTIONANDO 
except:#SALTA A ESTA PARTE DE AQUÍ Y EJECUTA ESTE CÓDIGO
    print("NO SE PUEDE HACER UNA DIVISION ENTRE 0")#NOS INFORMA DE QUE HA HABIDO UN ERROR PERO NO TERMINA LA EJECUCIÓN DE NUESTRO CÓDIGO DE FORMA INESPERADA
print("-----------------------------------")
#OTRA FORMA DEL MANEJO DE EXCEPCIONES AÑADIENDO ELSE
try:
    numero2 = 1
    resultado = numero1/numero2#ESTO YA NO VA A DAR ERROR POR LO QUE LA DIVISIÓN SE REALIZA CORRECTAMENTE
except:
    print("NO SE PUEDE HACER UNA DIVISION ENTRE 0")
else:#ESTE CODIGO DENTRO DEL ELSE SE VA A EJECUTAR SIEMPRE Y CUANDO EL BLOQUE TRY NO DE ERROR
    print(f"EL RESULTADO DE LA DIVISION ES DE: {resultado}")
print("-----------------------------------")
#OTRA FORMA DEL MANEJO DE EXCEPCIONES AÑADIENDO EL BLOQUE FINALLY, ESTE SIEMPRE SE EJECUTARÁ FALLE O NO NUESTRO PROGRAMA

try:
    numero2 = 1
    resultado = numero1/numero2#ESTO YA NO VA A DAR ERROR POR LO QUE LA DIVISIÓN SE REALIZA CORRECTAMENTE
except:
    print("NO SE PUEDE HACER UNA DIVISION ENTRE 0")
else:#ESTE CODIGO DENTRO DEL ELSE SE VA A EJECUTAR SIEMPRE Y CUANDO EL BLOQUE TRY NO DE ERROR
    print(f"EL RESULTADO DE LA DIVISION ES DE: {resultado}")
finally:#ESTE BLOQUE DE CÓDIGO SE EJECUTA SIEMPRE, FUNCIONE CORRECTAMENTE O DE ERROR LA APLICACIÓN
    print("PASE LO QUE PASE YO SIEMPRE ME EJECUTO:)")
print("-----------------------------------")
try:
    resultado = numero1/numero2#ESTO YA NO VA A DAR ERROR POR LO QUE LA DIVISIÓN SE REALIZA CORRECTAMENTE
except:
    print("NO SE PUEDE HACER UNA DIVISION ENTRE 0")
else:#ESTE CODIGO DENTRO DEL ELSE SE VA A EJECUTAR SIEMPRE Y CUANDO EL BLOQUE TRY NO DE ERROR
    print(f"EL RESULTADO DE LA DIVISION ES DE: {resultado}")
finally:#ESTE BLOQUE DE CÓDIGO SE EJECUTA SIEMPRE, FUNCIONE CORRECTAMENTE O DE ERROR LA APLICACIÓN
    print("PASE LO QUE PASE YO SIEMPRE ME EJECUTO:)")
print("-----------------------------------")
#AHORA QUE YA SABEMOS COMO FUNCIONA EL MANEJO DE EXPCEPCIONES VAMOS A IR UN POCO MÁS ALLÁ, IMAGINATE EN UNA DIVISIÓN LOS ERRORES QUE PUEDEN DARSE:
#1. DIVIDIR ENTRE 0
#2. INTENTAR DIVIDIR UN NUMERO ENTRE UN STRING
#PERO YO EN MI BLOQUE EXCEPT SÓLO CONTROLO SI HAY UN ERROR, PERO YO QUIERO SABER QUE ERROR ESTÁ DANDO Y SACAR UNA COSA DISTINTA PARA CADA ERROR,
#ENTONCES PODEMOS DECLARAR VARIOS BLOQUES EXCEPT PARA CADA EXCEPCION QUE CONTROLEMOS

try:
    resultado = numero1/"HOLA"
except TypeError:#EXCEPTION QUE CONTROLA QUE LOS TIPOS SON CORRECTOS, INT/INT, SI INTENTAMOS INT/STRING ERROR
    print("NO SE PUEDE HACER UNA DIVISION ENTRE UN NUMERO Y UN STRING")
except ZeroDivisionError:#EXCEPTION QUE CONTROLA QUE EL DENOMINADOR DE LA DIVISION ES DIFERENTE A 0
    print("NO SE PUEDE HACER UNA DIVISION ENTRE 0")
else:
    print(f"EL RESULTADO DE LA DIVISION ES DE: {resultado}")
finally:
    print("PASE LO QUE PASE YO SIEMPRE ME EJECUTO:)")
    
print("-----------------------------------")

#Y SI YO QUIERO IMPRIMIR LA INFORMACIÓN DEL ERROR EN CONCRETO, ES DECIR MOSTRAR POR CONSOLA LO QUE ESTÁ OCURRIENDO DE VERDAD PERO SIN QUE PETE PODEMOS HACER CON AS

try:
    resultado = numero1/"HOLA"
except TypeError as nombre_cualquiera:#EXCEPTION QUE CONTROLA QUE LOS TIPOS SON CORRECTOS, INT/INT, SI INTENTAMOS INT/STRING ERROR
    print(nombre_cualquiera)#MOSTRAMOS EL ERROR EN CONCRETO 
    print("NO SE PUEDE HACER UNA DIVISION ENTRE UN NUMERO Y UN STRING")
except ZeroDivisionError:#EXCEPTION QUE CONTROLA QUE EL DENOMINADOR DE LA DIVISION ES DIFERENTE A 0
    print("NO SE PUEDE HACER UNA DIVISION ENTRE 0")
else:
    print(f"EL RESULTADO DE LA DIVISION ES DE: {resultado}")
finally:
    print("PASE LO QUE PASE YO SIEMPRE ME EJECUTO:)")
    
print("-----------------------------------")

#POR ÚLTIMO, Y SI YO NO ME SE TODOS LOS NOMBRES DE TODAS LAS EXPCEPCIONES, QUE ES LO MÁS NORMAL PUEDO DECLARAR UNA GENÉRICA QUE ES EXCPETION
try:
    resultado = numero1/0
except TypeError as nombre_cualquiera:#EXCEPTION QUE CONTROLA QUE LOS TIPOS SON CORRECTOS, INT/INT, SI INTENTAMOS INT/STRING ERROR
    print(nombre_cualquiera)#MOSTRAMOS EL ERROR EN CONCRETO 
    print("NO SE PUEDE HACER UNA DIVISION ENTRE UN NUMERO Y UN STRING")
except Exception as error_general:#EXCEPTION QUE CONTROLA TODOS LOS POSIBLES ERRORES QUE OCURRAN
    print(error_general)#MOSTRAMOS LO QUE REALMENTE ESTA PASANDO
    print("ERROR GENERAL")
else:
    print(f"EL RESULTADO DE LA DIVISION ES DE: {resultado}")
finally:
    print("PASE LO QUE PASE YO SIEMPRE ME EJECUTO:)")
    
print("-----------------------------------")
